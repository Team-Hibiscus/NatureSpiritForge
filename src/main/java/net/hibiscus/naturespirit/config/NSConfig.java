package net.hibiscus.naturespirit.config;
import net.hibiscus.naturespirit.NatureSpirit;
import net.neoforged.bus.api.SubscribeEvent;
import net.neoforged.fml.common.EventBusSubscriber;
import net.neoforged.fml.config.IConfigSpec;
import net.neoforged.fml.event.config.ModConfigEvent;
import net.neoforged.neoforge.common.ModConfigSpec;


@EventBusSubscriber(modid = NatureSpirit.MOD_ID, bus = EventBusSubscriber.Bus.MOD)
public class NSConfig {
  private static final ModConfigSpec.Builder BUILDER = new ModConfigSpec.Builder();

  public static final ModConfigSpec.IntValue TERRA_FERAX_WEIGHT = BUILDER.defineInRange("region.terra_ferax_weight", 4, 0, Integer.MAX_VALUE);
  public static final ModConfigSpec.IntValue TERRA_SOLARIS_WEIGHT = BUILDER.defineInRange("region.terra_solaris_weight", 4, 0, Integer.MAX_VALUE);
  public static final ModConfigSpec.IntValue TERRA_FLAVA_WEIGHT = BUILDER.defineInRange("region.terra_flava_weight", 4, 0, Integer.MAX_VALUE);
  public static final ModConfigSpec.IntValue TERRA_LAETA_WEIGHT = BUILDER.defineInRange("region.terra_laeta_weight", 4, 0, Integer.MAX_VALUE);
  public static final ModConfigSpec.IntValue TERRA_MATER_WEIGHT = BUILDER.defineInRange("region.terra_mater_weight", 4, 0, Integer.MAX_VALUE);
  public static final ModConfigSpec.BooleanValue CALCITE_GENERATOR = BUILDER.define("misc.calcite_generator", true);
  public static final ModConfigSpec.BooleanValue DEEPSLATE_GENERATOR = BUILDER.define("misc.deepslate_generator", true);
  public static final ModConfigSpec.BooleanValue CREATIVE_TAB = BUILDER.define("misc.creative_tab", true);
  public static final ModConfigSpec.BooleanValue SUGI_AND_STRATIFIED_PILLARS = BUILDER.define("misc.sugi_and_stratified_pillars", true);
  public static final ModConfigSpec.BooleanValue VANILLA_TREES_TOGGLE = BUILDER.define("datapack.vanilla_trees_toggle", false);
  public static final ModConfigSpec.BooleanValue BIRCH_FOREST_TOGGLE = BUILDER.define("datapack.birch_forest_toggle", true);
  public static final ModConfigSpec.BooleanValue FLOWER_FOREST_TOGGLE = BUILDER.define("datapack.flower_forest_toggle", true);
  public static final ModConfigSpec.BooleanValue JUNGLE_TOGGLE = BUILDER.define("datapack.jungle_toggle", true);
  public static final ModConfigSpec.BooleanValue SWAMP_TOGGLE = BUILDER.define("datapack.swamp_toggle", true);
  public static final ModConfigSpec.BooleanValue DESERT_TOGGLE = BUILDER.define("datapack.desert_toggle", true);
  public static final ModConfigSpec.BooleanValue BADLANDS_TOGGLE = BUILDER.define("datapack.badlands_toggle", true);
  public static final ModConfigSpec.BooleanValue MOUNTAIN_BIOMES_TOGGLE = BUILDER.define("datapack.mountain_biomes_toggle", true);
  public static final ModConfigSpec.BooleanValue SAVANNA_TOGGLE = BUILDER.define("datapack.savanna_toggle", true);
  public static final ModConfigSpec.BooleanValue DARK_FOREST_TOGGLE = BUILDER.define("datapack.dark_forest_toggle", true);
  public static final ModConfigSpec.BooleanValue WINDSWEPT_HILLS_TOGGLE = BUILDER.define("datapack.windswept_hills_toggle", true);
  public static final ModConfigSpec.BooleanValue HAS_SUGI_FOREST = BUILDER.define("biome.has_sugi_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_WINDSWEPT_SUGI_FOREST = BUILDER.define("biome.has_windswept_sugi_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_BLOOMING_SUGI_FOREST = BUILDER.define("biome.has_blooming_sugi_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_LAVENDER_FIELDS = BUILDER.define("biome.has_lavender_fields", true);
  public static final ModConfigSpec.BooleanValue HAS_MARSH = BUILDER.define("biome.has_marsh", true);
  public static final ModConfigSpec.BooleanValue HAS_BAMBOO_WETLANDS = BUILDER.define("biome.has_bamboo_wetlands", true);
  public static final ModConfigSpec.BooleanValue HAS_WISTERIA_FOREST = BUILDER.define("biome.has_wisteria_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_REDWOOD_FOREST = BUILDER.define("biome.has_redwood_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_SNOWY_REDWOOD_FOREST = BUILDER.define("biome.has_snowy_redwood_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_ASPEN_FOREST = BUILDER.define("biome.has_aspen_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_MAPLE_WOODLANDS = BUILDER.define("biome.has_maple_woodlands", true);
  public static final ModConfigSpec.BooleanValue HAS_GOLDEN_WILDS = BUILDER.define("biome.has_golden_wilds", true);
  public static final ModConfigSpec.BooleanValue HAS_MARIGOLD_MEADOWS = BUILDER.define("biome.has_marigold_meadows", true);
  public static final ModConfigSpec.BooleanValue HAS_FIR_FOREST = BUILDER.define("biome.has_fir_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_SNOWY_FIR_FOREST = BUILDER.define("biome.has_snowy_fir_forest", true);
  public static final ModConfigSpec.BooleanValue HAS_CYPRESS_FIELDS = BUILDER.define("biome.has_cypress_fields", true);
  public static final ModConfigSpec.BooleanValue HAS_CEDAR_THICKET = BUILDER.define("biome.has_cedar_thicket", true);
  public static final ModConfigSpec.BooleanValue HAS_CARNATION_FIELDS = BUILDER.define("biome.has_carnation_fields", true);
  public static final ModConfigSpec.BooleanValue HAS_STRATIFIED_DESERT = BUILDER.define("biome.has_stratified_desert", true);
  public static final ModConfigSpec.BooleanValue HAS_BLOOMING_DUNES = BUILDER.define("biome.has_blooming_dunes", true);
  public static final ModConfigSpec.BooleanValue HAS_LIVELY_DUNES = BUILDER.define("biome.has_lively_dunes", true);
  public static final ModConfigSpec.BooleanValue HAS_DRYLANDS = BUILDER.define("biome.has_drylands", true);
  public static final ModConfigSpec.BooleanValue HAS_WOODED_DRYLANDS = BUILDER.define("biome.has_wooded_drylands", true);
  public static final ModConfigSpec.BooleanValue HAS_XERIC_PLAINS = BUILDER.define("biome.has_xeric_plains", true);
  public static final ModConfigSpec.BooleanValue HAS_WHITE_CLIFFS = BUILDER.define("biome.has_white_cliffs", true);
  public static final ModConfigSpec.BooleanValue HAS_PRAIRIE = BUILDER.define("biome.has_prairie", true);
  public static final ModConfigSpec.BooleanValue HAS_OAK_SAVANNA = BUILDER.define("biome.has_oak_savanna", true);
  public static final ModConfigSpec.BooleanValue HAS_HEATHER_FIELDS = BUILDER.define("biome.has_heather_fields", true);
  public static final ModConfigSpec.BooleanValue HAS_TUNDRA = BUILDER.define("biome.has_tundra", true);
  public static final ModConfigSpec.BooleanValue HAS_ALPINE_CLEARINGS = BUILDER.define("biome.has_alpine_clearings", true);
  public static final ModConfigSpec.BooleanValue HAS_ALPINE_HIGHLANDS = BUILDER.define("biome.has_alpine_highlands", true);
  public static final ModConfigSpec.BooleanValue HAS_CONIFEROUS_COVERT = BUILDER.define("biome.has_coniferous_covert", true);
  public static final ModConfigSpec.BooleanValue HAS_BOREAL_TAIGA = BUILDER.define("biome.has_boreal_taiga", true);
  public static final ModConfigSpec.BooleanValue HAS_TROPICAL_SHORES = BUILDER.define("biome.has_tropical_shores", true);
  public static final ModConfigSpec.BooleanValue HAS_TROPICAL_WOODS = BUILDER.define("biome.has_tropical_woods", true);
  public static final ModConfigSpec.BooleanValue HAS_SPARSE_TROPICAL_WOODS = BUILDER.define("biome.has_sparse_tropical_woods", true);
  public static final ModConfigSpec.BooleanValue HAS_TROPICAL_BASIN = BUILDER.define("biome.has_tropical_basin", true);
  public static final ModConfigSpec.BooleanValue HAS_ARID_SAVANNA = BUILDER.define("biome.has_arid_savanna", true);
  public static final ModConfigSpec.BooleanValue HAS_SCORCHED_DUNES = BUILDER.define("biome.has_scorched_dunes", true);
  public static final ModConfigSpec.BooleanValue HAS_FLOWERING_SHRUBLAND = BUILDER.define("biome.has_flowering_shrubland", true);
  public static final ModConfigSpec.BooleanValue HAS_SHRUBLAND = BUILDER.define("biome.has_shrubland", true);
  public static final ModConfigSpec.BooleanValue HAS_ARID_HIGHLANDS = BUILDER.define("biome.has_arid_highlands", true);
  public static final ModConfigSpec.BooleanValue HAS_SHRUBBY_HIGHLANDS = BUILDER.define("biome.has_shrubby_highlands", true);
  public static final ModConfigSpec.BooleanValue HAS_WOODY_HIGHLANDS = BUILDER.define("biome.has_woody_highlands", true);
  public static final ModConfigSpec.BooleanValue HAS_RED_PEAKS = BUILDER.define("biome.has_red_peaks", true);
  public static final ModConfigSpec.BooleanValue HAS_DUSTY_SLOPES = BUILDER.define("biome.has_dusty_slopes", true);
  public static final ModConfigSpec.BooleanValue HAS_SNOWCAPPED_RED_PEAKS = BUILDER.define("biome.has_snowcapped_red_peaks", true);
  public static final ModConfigSpec.BooleanValue HAS_SLEETED_SLOPES = BUILDER.define("biome.has_sleeted_slopes", true);
  public static final ModConfigSpec.BooleanValue HAS_BLOOMING_HIGHLANDS = BUILDER.define("biome.has_blooming_highlands", true);
  public static final ModConfigSpec.BooleanValue HAS_CHAPARRAL = BUILDER.define("biome.has_chaparral", true);
  public static final ModConfigSpec.BooleanValue HAS_FLORAL_RIDGES = BUILDER.define("biome.has_floral_ridges", true);

  public static final IConfigSpec SPEC = BUILDER.build();

  public static int terraFeraxWeight;
  public static int terraSolarisWeight;
  public static int terraFlavaWeight;
  public static int terraLaetaWeight;
  public static int terraMaterWeight;
  public static boolean calciteGenerator;
  public static boolean deepslateGenerator;
  public static boolean creativeTab;
  public static boolean sugiAndStratifiedPillars;
  public static boolean vanillaTreesToggle;
  public static boolean birchForestToggle;
  public static boolean flowerForestToggle;
  public static boolean jungleToggle;
  public static boolean swampToggle;
  public static boolean desertToggle;
  public static boolean badlandsToggle;
  public static boolean mountainBiomesToggle;
  public static boolean savannaToggle;
  public static boolean darkForestToggle;
  public static boolean windsweptHillsToggle;
  public static boolean hasSugiForest;
  public static boolean hasWindsweptSugiForest;
  public static boolean hasBloomingSugiForest;
  public static boolean hasLavenderFields;
  public static boolean hasMarsh;
  public static boolean hasBambooWetlands;
  public static boolean hasWisteriaForest;
  public static boolean hasRedwoodForest;
  public static boolean hasSnowyRedwoodForest;
  public static boolean hasAspenForest;
  public static boolean hasMapleWoodlands;
  public static boolean hasGoldenWilds;
  public static boolean hasMarigoldMeadows;
  public static boolean hasFirForest;
  public static boolean hasSnowyFirForest;
  public static boolean hasCypressFields;
  public static boolean hasCedarThicket;
  public static boolean hasCarnationFields;
  public static boolean hasStratifiedDesert;
  public static boolean hasBloomingDunes;
  public static boolean hasLivelyDunes;
  public static boolean hasDrylands;
  public static boolean hasWoodedDrylands;
  public static boolean hasXericPlains;
  public static boolean hasWhiteCliffs;
  public static boolean hasPrairie;
  public static boolean hasOakSavanna;
  public static boolean hasHeatherFields;
  public static boolean hasTundra;
  public static boolean hasAlpineClearings;
  public static boolean hasAlpineHighlands;
  public static boolean hasConiferousCovert;
  public static boolean hasBorealTaiga;
  public static boolean hasTropicalShores;
  public static boolean hasTropicalWoods;
  public static boolean hasSparseTropicalWoods;
  public static boolean hasTropicalBasin;
  public static boolean hasAridSavanna;
  public static boolean hasScorchedDunes;
  public static boolean hasFloweringShrubland;
  public static boolean hasShrubland;
  public static boolean hasAridHighlands;
  public static boolean hasShrubbyHighlands;
  public static boolean hasWoodyHighlands;
  public static boolean hasRedPeaks;
  public static boolean hasDustySlopes;
  public static boolean hasSnowcappedRedPeaks;
  public static boolean hasSleetedSlopes;
  public static boolean hasBloomingHighlands;
  public static boolean hasChaparral;
  public static boolean hasFloralRidges;

  @SubscribeEvent
  static void onLoad(final ModConfigEvent event) {
    terraFeraxWeight = TERRA_FERAX_WEIGHT.get();
    terraSolarisWeight = TERRA_SOLARIS_WEIGHT.get();
    terraFlavaWeight = TERRA_FLAVA_WEIGHT.get();
    terraLaetaWeight = TERRA_LAETA_WEIGHT.get();
    terraMaterWeight = TERRA_MATER_WEIGHT.get();
    calciteGenerator = CALCITE_GENERATOR.get();
    deepslateGenerator = DEEPSLATE_GENERATOR.get();
    creativeTab = CREATIVE_TAB.get();
    sugiAndStratifiedPillars = SUGI_AND_STRATIFIED_PILLARS.get();
    vanillaTreesToggle = VANILLA_TREES_TOGGLE.get();
    birchForestToggle = BIRCH_FOREST_TOGGLE.get();
    flowerForestToggle = FLOWER_FOREST_TOGGLE.get();
    jungleToggle = JUNGLE_TOGGLE.get();
    swampToggle = SWAMP_TOGGLE.get();
    desertToggle = DESERT_TOGGLE.get();
    badlandsToggle = BADLANDS_TOGGLE.get();
    mountainBiomesToggle = MOUNTAIN_BIOMES_TOGGLE.get();
    savannaToggle = SAVANNA_TOGGLE.get();
    darkForestToggle = DARK_FOREST_TOGGLE.get();
    windsweptHillsToggle = WINDSWEPT_HILLS_TOGGLE.get();
    hasSugiForest = HAS_SUGI_FOREST.get();
    hasWindsweptSugiForest = HAS_WINDSWEPT_SUGI_FOREST.get();
    hasBloomingSugiForest = HAS_BLOOMING_SUGI_FOREST.get();
    hasLavenderFields = HAS_LAVENDER_FIELDS.get();
    hasMarsh = HAS_MARSH.get();
    hasBambooWetlands = HAS_BAMBOO_WETLANDS.get();
    hasWisteriaForest = HAS_WISTERIA_FOREST.get();
    hasRedwoodForest = HAS_REDWOOD_FOREST.get();
    hasSnowyRedwoodForest = HAS_SNOWY_REDWOOD_FOREST.get();
    hasAspenForest = HAS_ASPEN_FOREST.get();
    hasMapleWoodlands = HAS_MAPLE_WOODLANDS.get();
    hasGoldenWilds = HAS_GOLDEN_WILDS.get();
    hasMarigoldMeadows = HAS_MARIGOLD_MEADOWS.get();
    hasFirForest = HAS_FIR_FOREST.get();
    hasSnowyFirForest = HAS_SNOWY_FIR_FOREST.get();
    hasCypressFields = HAS_CYPRESS_FIELDS.get();
    hasCedarThicket = HAS_CEDAR_THICKET.get();
    hasCarnationFields = HAS_CARNATION_FIELDS.get();
    hasStratifiedDesert = HAS_STRATIFIED_DESERT.get();
    hasBloomingDunes = HAS_BLOOMING_DUNES.get();
    hasLivelyDunes = HAS_LIVELY_DUNES.get();
    hasDrylands = HAS_DRYLANDS.get();
    hasWoodedDrylands = HAS_WOODED_DRYLANDS.get();
    hasXericPlains = HAS_XERIC_PLAINS.get();
    hasWhiteCliffs = HAS_WHITE_CLIFFS.get();
    hasPrairie = HAS_PRAIRIE.get();
    hasOakSavanna = HAS_OAK_SAVANNA.get();
    hasHeatherFields = HAS_HEATHER_FIELDS.get();
    hasTundra = HAS_TUNDRA.get();
    hasAlpineClearings = HAS_ALPINE_CLEARINGS.get();
    hasAlpineHighlands = HAS_ALPINE_HIGHLANDS.get();
    hasConiferousCovert = HAS_CONIFEROUS_COVERT.get();
    hasBorealTaiga = HAS_BOREAL_TAIGA.get();
    hasTropicalShores = HAS_TROPICAL_SHORES.get();
    hasTropicalWoods = HAS_TROPICAL_WOODS.get();
    hasSparseTropicalWoods = HAS_SPARSE_TROPICAL_WOODS.get();
    hasTropicalBasin = HAS_TROPICAL_BASIN.get();
    hasAridSavanna = HAS_ARID_SAVANNA.get();
    hasScorchedDunes = HAS_SCORCHED_DUNES.get();
    hasFloweringShrubland = HAS_FLOWERING_SHRUBLAND.get();
    hasShrubland = HAS_SHRUBLAND.get();
    hasAridHighlands = HAS_ARID_HIGHLANDS.get();
    hasShrubbyHighlands = HAS_SHRUBBY_HIGHLANDS.get();
    hasWoodyHighlands = HAS_WOODY_HIGHLANDS.get();
    hasRedPeaks = HAS_RED_PEAKS.get();
    hasDustySlopes = HAS_DUSTY_SLOPES.get();
    hasSnowcappedRedPeaks = HAS_SNOWCAPPED_RED_PEAKS.get();
    hasSleetedSlopes = HAS_SLEETED_SLOPES.get();
    hasBloomingHighlands = HAS_BLOOMING_HIGHLANDS.get();
    hasChaparral = HAS_CHAPARRAL.get();
    hasFloralRidges = HAS_FLORAL_RIDGES.get();
  }
}
