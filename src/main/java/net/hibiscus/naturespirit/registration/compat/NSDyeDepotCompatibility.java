package net.hibiscus.naturespirit.registration.compat;

import com.google.common.base.Supplier;
import net.hibiscus.naturespirit.blocks.PaperLanternBlock;
import net.hibiscus.naturespirit.registration.NSBlocks;
import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceKey;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.world.item.CreativeModeTabs;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.ItemLike;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.SlabBlock;
import net.minecraft.world.level.block.SoundType;
import net.minecraft.world.level.block.StairBlock;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.block.state.properties.NoteBlockInstrument;
import net.minecraft.world.level.material.MapColor;
import net.minecraft.world.level.material.PushReaction;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.RegistryObject;

import static net.hibiscus.naturespirit.NatureSpirit.MOD_ID;
import static net.hibiscus.naturespirit.registration.NSRegistryHelper.*;

public class NSDyeDepotCompatibility {
   public static final DeferredRegister<Block> DD_BLOCKS = DeferredRegister.create(Registries.BLOCK, MOD_ID);
   public static final DeferredRegister<Item> DD_ITEMS = DeferredRegister.create(Registries.ITEM, MOD_ID);
   public static final RegistryObject<Block> MAROON_PAPER_LANTERN = registerTransparentBlock("maroon_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NSBlocks.BROWN_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS, NSBlocks.BROWN_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> ROSE_PAPER_LANTERN = registerTransparentBlock("rose_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), MAROON_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS,  MAROON_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> CORAL_PAPER_LANTERN = registerTransparentBlock("coral_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NSBlocks.RED_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS, NSBlocks.RED_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> GINGER_PAPER_LANTERN = registerTransparentBlock("ginger_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), CORAL_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS,  CORAL_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> TAN_PAPER_LANTERN = registerTransparentBlock("tan_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NSBlocks.ORANGE_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS, NSBlocks.ORANGE_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> BEIGE_PAPER_LANTERN = registerTransparentBlock("beige_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.SAND).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), TAN_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS,  TAN_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> AMBER_PAPER_LANTERN = registerTransparentBlock("amber_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NSBlocks.YELLOW_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS, NSBlocks.YELLOW_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> OLIVE_PAPER_LANTERN = registerTransparentBlock("olive_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), AMBER_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS,  AMBER_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> FOREST_PAPER_LANTERN = registerTransparentBlock("forest_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NSBlocks.LIME_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS, NSBlocks.LIME_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> VERDANT_PAPER_LANTERN = registerTransparentBlock("verdant_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NSBlocks.GREEN_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS, NSBlocks.GREEN_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> TEAL_PAPER_LANTERN = registerTransparentBlock("teal_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), VERDANT_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS,  VERDANT_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> MINT_PAPER_LANTERN = registerTransparentBlock("mint_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NSBlocks.CYAN_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS, NSBlocks.CYAN_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> AQUA_PAPER_LANTERN = registerTransparentBlock("aqua_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), MINT_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS,  MINT_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> SLATE_PAPER_LANTERN = registerTransparentBlock("slate_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.WATER).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NSBlocks.BLUE_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS, NSBlocks.BLUE_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> NAVY_PAPER_LANTERN = registerTransparentBlock("navy_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), SLATE_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS,  SLATE_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);
   public static final RegistryObject<Block> INDIGO_PAPER_LANTERN = registerTransparentBlock("indigo_paper_lantern", () -> new PaperLanternBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).forceSolidOn().strength(0.5F).sound(SoundType.LANTERN).lightLevel((state) -> 15).noOcclusion().pushReaction(PushReaction.DESTROY)), NAVY_PAPER_LANTERN.get(), CreativeModeTabs.COLORED_BLOCKS,  NAVY_PAPER_LANTERN.get(), CreativeModeTabs.FUNCTIONAL_BLOCKS);

   public static final RegistryObject<Block> MAROON_KAOLIN = registerBlock("maroon_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BROWN_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_KAOLIN = registerBlock("rose_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MAROON_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_KAOLIN = registerBlock("coral_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.RED_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_KAOLIN = registerBlock("ginger_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), CORAL_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_KAOLIN = registerBlock("tan_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.ORANGE_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_KAOLIN = registerBlock("beige_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), TAN_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_KAOLIN = registerBlock("amber_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.YELLOW_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_KAOLIN = registerBlock("olive_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), AMBER_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_KAOLIN = registerBlock("forest_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.LIME_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_KAOLIN = registerBlock("verdant_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.GREEN_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_KAOLIN = registerBlock("teal_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), VERDANT_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_KAOLIN = registerBlock("mint_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.CYAN_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_KAOLIN = registerBlock("aqua_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MINT_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_KAOLIN = registerBlock("slate_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BLUE_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_KAOLIN = registerBlock("navy_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), SLATE_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_KAOLIN = registerBlock("indigo_kaolin", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NAVY_KAOLIN.get(), CreativeModeTabs.COLORED_BLOCKS);

   public static final RegistryObject<Block> MAROON_KAOLIN_STAIRS = registerBlock("maroon_kaolin_stairs", () -> new StairBlock(MAROON_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BROWN_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_KAOLIN_STAIRS = registerBlock("rose_kaolin_stairs", () -> new StairBlock(ROSE_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MAROON_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_KAOLIN_STAIRS = registerBlock("coral_kaolin_stairs", () -> new StairBlock(CORAL_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.RED_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_KAOLIN_STAIRS = registerBlock("ginger_kaolin_stairs", () -> new StairBlock(GINGER_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), CORAL_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_KAOLIN_STAIRS = registerBlock("tan_kaolin_stairs", () -> new StairBlock(TAN_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.ORANGE_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_KAOLIN_STAIRS = registerBlock("beige_kaolin_stairs", () -> new StairBlock(BEIGE_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), TAN_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_KAOLIN_STAIRS = registerBlock("amber_kaolin_stairs", () -> new StairBlock(AMBER_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.YELLOW_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_KAOLIN_STAIRS = registerBlock("olive_kaolin_stairs", () -> new StairBlock(OLIVE_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), AMBER_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_KAOLIN_STAIRS = registerBlock("forest_kaolin_stairs", () -> new StairBlock(FOREST_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.LIME_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_KAOLIN_STAIRS = registerBlock("verdant_kaolin_stairs", () -> new StairBlock(VERDANT_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.GREEN_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_KAOLIN_STAIRS = registerBlock("teal_kaolin_stairs", () -> new StairBlock(TEAL_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), VERDANT_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_KAOLIN_STAIRS = registerBlock("mint_kaolin_stairs", () -> new StairBlock(MINT_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.CYAN_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_KAOLIN_STAIRS = registerBlock("aqua_kaolin_stairs", () -> new StairBlock(AQUA_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MINT_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_KAOLIN_STAIRS = registerBlock("slate_kaolin_stairs", () -> new StairBlock(SLATE_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BLUE_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_KAOLIN_STAIRS = registerBlock("navy_kaolin_stairs", () -> new StairBlock(NAVY_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), SLATE_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_KAOLIN_STAIRS = registerBlock("indigo_kaolin_stairs", () -> new StairBlock(INDIGO_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NAVY_KAOLIN_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);

   public static final RegistryObject<Block> MAROON_KAOLIN_SLAB = registerBlock("maroon_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BROWN_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_KAOLIN_SLAB = registerBlock("rose_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MAROON_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_KAOLIN_SLAB = registerBlock("coral_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.RED_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_KAOLIN_SLAB = registerBlock("ginger_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), CORAL_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_KAOLIN_SLAB = registerBlock("tan_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.ORANGE_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_KAOLIN_SLAB = registerBlock("beige_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), TAN_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_KAOLIN_SLAB = registerBlock("amber_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.YELLOW_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_KAOLIN_SLAB = registerBlock("olive_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), AMBER_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_KAOLIN_SLAB = registerBlock("forest_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.LIME_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_KAOLIN_SLAB = registerBlock("verdant_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.GREEN_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_KAOLIN_SLAB = registerBlock("teal_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), VERDANT_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_KAOLIN_SLAB = registerBlock("mint_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.CYAN_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_KAOLIN_SLAB = registerBlock("aqua_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MINT_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_KAOLIN_SLAB = registerBlock("slate_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BLUE_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_KAOLIN_SLAB = registerBlock("navy_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), SLATE_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_KAOLIN_SLAB = registerBlock("indigo_kaolin_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NAVY_KAOLIN_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);


   public static final RegistryObject<Block> MAROON_KAOLIN_BRICKS = registerBlock("maroon_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BROWN_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_KAOLIN_BRICKS = registerBlock("rose_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MAROON_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_KAOLIN_BRICKS = registerBlock("coral_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.RED_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_KAOLIN_BRICKS = registerBlock("ginger_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), CORAL_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_KAOLIN_BRICKS = registerBlock("tan_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.ORANGE_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_KAOLIN_BRICKS = registerBlock("beige_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), TAN_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_KAOLIN_BRICKS = registerBlock("amber_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.YELLOW_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_KAOLIN_BRICKS = registerBlock("olive_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), AMBER_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_KAOLIN_BRICKS = registerBlock("forest_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.LIME_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_KAOLIN_BRICKS = registerBlock("verdant_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.GREEN_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_KAOLIN_BRICKS = registerBlock("teal_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), VERDANT_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_KAOLIN_BRICKS = registerBlock("mint_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.CYAN_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_KAOLIN_BRICKS = registerBlock("aqua_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MINT_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_KAOLIN_BRICKS = registerBlock("slate_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BLUE_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_KAOLIN_BRICKS = registerBlock("navy_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), SLATE_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_KAOLIN_BRICKS = registerBlock("indigo_kaolin_bricks", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NAVY_KAOLIN_BRICKS.get(), CreativeModeTabs.COLORED_BLOCKS);

   public static final RegistryObject<Block> MAROON_KAOLIN_BRICK_STAIRS = registerBlock("maroon_kaolin_brick_stairs", () -> new StairBlock(MAROON_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BROWN_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_KAOLIN_BRICK_STAIRS = registerBlock("rose_kaolin_brick_stairs", () -> new StairBlock(ROSE_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MAROON_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_KAOLIN_BRICK_STAIRS = registerBlock("coral_kaolin_brick_stairs", () -> new StairBlock(CORAL_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.RED_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_KAOLIN_BRICK_STAIRS = registerBlock("ginger_kaolin_brick_stairs", () -> new StairBlock(GINGER_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), CORAL_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_KAOLIN_BRICK_STAIRS = registerBlock("tan_kaolin_brick_stairs", () -> new StairBlock(TAN_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.ORANGE_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_KAOLIN_BRICK_STAIRS = registerBlock("beige_kaolin_brick_stairs", () -> new StairBlock(BEIGE_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), TAN_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_KAOLIN_BRICK_STAIRS = registerBlock("amber_kaolin_brick_stairs", () -> new StairBlock(AMBER_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.YELLOW_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_KAOLIN_BRICK_STAIRS = registerBlock("olive_kaolin_brick_stairs", () -> new StairBlock(OLIVE_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), AMBER_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_KAOLIN_BRICK_STAIRS = registerBlock("forest_kaolin_brick_stairs", () -> new StairBlock(FOREST_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.LIME_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_KAOLIN_BRICK_STAIRS = registerBlock("verdant_kaolin_brick_stairs", () -> new StairBlock(VERDANT_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.GREEN_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_KAOLIN_BRICK_STAIRS = registerBlock("teal_kaolin_brick_stairs", () -> new StairBlock(TEAL_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), VERDANT_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_KAOLIN_BRICK_STAIRS = registerBlock("mint_kaolin_brick_stairs", () -> new StairBlock(MINT_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.CYAN_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_KAOLIN_BRICK_STAIRS = registerBlock("aqua_kaolin_brick_stairs", () -> new StairBlock(AQUA_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MINT_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_KAOLIN_BRICK_STAIRS = registerBlock("slate_kaolin_brick_stairs", () -> new StairBlock(SLATE_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BLUE_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_KAOLIN_BRICK_STAIRS = registerBlock("navy_kaolin_brick_stairs", () -> new StairBlock(NAVY_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), SLATE_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_KAOLIN_BRICK_STAIRS = registerBlock("indigo_kaolin_brick_stairs", () -> new StairBlock(INDIGO_KAOLIN.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NAVY_KAOLIN_BRICK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);

   public static final RegistryObject<Block> MAROON_KAOLIN_BRICK_SLAB = registerBlock("maroon_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BROWN_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_KAOLIN_BRICK_SLAB = registerBlock("rose_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MAROON_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_KAOLIN_BRICK_SLAB = registerBlock("coral_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.RED_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_KAOLIN_BRICK_SLAB = registerBlock("ginger_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), CORAL_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_KAOLIN_BRICK_SLAB = registerBlock("tan_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.ORANGE_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_KAOLIN_BRICK_SLAB = registerBlock("beige_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), TAN_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_KAOLIN_BRICK_SLAB = registerBlock("amber_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.YELLOW_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_KAOLIN_BRICK_SLAB = registerBlock("olive_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), AMBER_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_KAOLIN_BRICK_SLAB = registerBlock("forest_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.LIME_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_KAOLIN_BRICK_SLAB = registerBlock("verdant_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.GREEN_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_KAOLIN_BRICK_SLAB = registerBlock("teal_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), VERDANT_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_KAOLIN_BRICK_SLAB = registerBlock("mint_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.CYAN_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_KAOLIN_BRICK_SLAB = registerBlock("aqua_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), MINT_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_KAOLIN_BRICK_SLAB = registerBlock("slate_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NSBlocks.BLUE_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_KAOLIN_BRICK_SLAB = registerBlock("navy_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), SLATE_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_KAOLIN_BRICK_SLAB = registerBlock("indigo_kaolin_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(1.25F,4.2F)), NAVY_KAOLIN_BRICK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);

   public static final RegistryObject<Block> MAROON_CHALK = registerBlock("maroon_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.BROWN_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_CHALK = registerBlock("rose_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), MAROON_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_CHALK = registerBlock("coral_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.RED_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_CHALK = registerBlock("ginger_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), CORAL_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_CHALK = registerBlock("tan_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.ORANGE_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_CHALK = registerBlock("beige_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), TAN_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_CHALK = registerBlock("amber_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.YELLOW_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_CHALK = registerBlock("olive_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), AMBER_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_CHALK = registerBlock("forest_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.LIME_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_CHALK = registerBlock("verdant_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.GREEN_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_CHALK = registerBlock("teal_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), VERDANT_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_CHALK = registerBlock("mint_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.CYAN_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_CHALK = registerBlock("aqua_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), MINT_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_CHALK = registerBlock("slate_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.BLUE_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_CHALK = registerBlock("navy_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), SLATE_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_CHALK = registerBlock("indigo_chalk", () -> new Block(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NAVY_CHALK.get(), CreativeModeTabs.COLORED_BLOCKS);

   public static final RegistryObject<Block> MAROON_CHALK_STAIRS = registerBlock("maroon_chalk_stairs", () -> new StairBlock(MAROON_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.BROWN_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_CHALK_STAIRS = registerBlock("rose_chalk_stairs", () -> new StairBlock(ROSE_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), MAROON_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_CHALK_STAIRS = registerBlock("coral_chalk_stairs", () -> new StairBlock(CORAL_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.RED_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_CHALK_STAIRS = registerBlock("ginger_chalk_stairs", () -> new StairBlock(GINGER_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), CORAL_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_CHALK_STAIRS = registerBlock("tan_chalk_stairs", () -> new StairBlock(TAN_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.ORANGE_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_CHALK_STAIRS = registerBlock("beige_chalk_stairs", () -> new StairBlock(BEIGE_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), TAN_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_CHALK_STAIRS = registerBlock("amber_chalk_stairs", () -> new StairBlock(AMBER_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.YELLOW_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_CHALK_STAIRS = registerBlock("olive_chalk_stairs", () -> new StairBlock(OLIVE_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), AMBER_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_CHALK_STAIRS = registerBlock("forest_chalk_stairs", () -> new StairBlock(FOREST_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.LIME_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_CHALK_STAIRS = registerBlock("verdant_chalk_stairs", () -> new StairBlock(VERDANT_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.GREEN_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_CHALK_STAIRS = registerBlock("teal_chalk_stairs", () -> new StairBlock(TEAL_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), VERDANT_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_CHALK_STAIRS = registerBlock("mint_chalk_stairs", () -> new StairBlock(MINT_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.CYAN_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_CHALK_STAIRS = registerBlock("aqua_chalk_stairs", () -> new StairBlock(AQUA_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), MINT_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_CHALK_STAIRS = registerBlock("slate_chalk_stairs", () -> new StairBlock(SLATE_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.BLUE_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_CHALK_STAIRS = registerBlock("navy_chalk_stairs", () -> new StairBlock(NAVY_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), SLATE_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_CHALK_STAIRS = registerBlock("indigo_chalk_stairs", () -> new StairBlock(INDIGO_CHALK.get().defaultBlockState(), BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NAVY_CHALK_STAIRS.get(), CreativeModeTabs.COLORED_BLOCKS);

   public static final RegistryObject<Block> MAROON_CHALK_SLAB = registerBlock("maroon_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.CRIMSON_HYPHAE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.BROWN_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> ROSE_CHALK_SLAB = registerBlock("rose_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_MAGENTA).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), MAROON_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> CORAL_CHALK_SLAB = registerBlock("coral_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.RAW_IRON).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.RED_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> GINGER_CHALK_SLAB = registerBlock("ginger_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_ORANGE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), CORAL_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TAN_CHALK_SLAB = registerBlock("tan_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.ORANGE_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> BEIGE_CHALK_SLAB = registerBlock("beige_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.SAND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), TAN_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AMBER_CHALK_SLAB = registerBlock("amber_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.PODZOL).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.YELLOW_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> OLIVE_CHALK_SLAB = registerBlock("olive_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_LIGHT_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), AMBER_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> FOREST_CHALK_SLAB = registerBlock("forest_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.EMERALD).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.LIME_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> VERDANT_CHALK_SLAB = registerBlock("verdant_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_GREEN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.GREEN_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> TEAL_CHALK_SLAB = registerBlock("teal_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), VERDANT_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> MINT_CHALK_SLAB = registerBlock("mint_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.WARPED_WART_BLOCK).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.CYAN_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> AQUA_CHALK_SLAB = registerBlock("aqua_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.DIAMOND).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), MINT_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> SLATE_CHALK_SLAB = registerBlock("slate_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.WATER).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NSBlocks.BLUE_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> NAVY_CHALK_SLAB = registerBlock("navy_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), SLATE_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);
   public static final RegistryObject<Block> INDIGO_CHALK_SLAB = registerBlock("indigo_chalk_slab", () -> new SlabBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BLUE).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(0.5F)), NAVY_CHALK_SLAB.get(), CreativeModeTabs.COLORED_BLOCKS);

   public static void registerColoredBlocks() {
   }
   public static RegistryObject<Block> registerBlockWithoutTab(String name, Supplier<Block> block) {
      return DD_BLOCKS.register(name, block);
   }

   public static RegistryObject<Block> registerBlock(String name, Supplier<Block> block) {
      registerItem(name, () -> new BlockItem(block.get(), new Item.Properties()));
      return registerBlockWithoutTab(name, block);
   }

   public static RegistryObject<Block> registerBlock(String name, Supplier<Block> block, ItemLike blockBefore, ResourceKey<CreativeModeTab> secondaryTab) {
      RegistryObject<Block> block1 = registerBlock(name, block);
//    ItemGroupEvents.modifyEntriesEvent(secondaryTab).register(entries -> entries.addAfter(blockBefore, block1.asItem()));
      return block1;
   }

   public static RegistryObject<Block> registerBlock(String name, Supplier<Block> block, ItemLike blockBefore, ResourceKey<CreativeModeTab> secondaryTab, ItemLike blockBefore2, ResourceKey<CreativeModeTab> thirdTab) {
      RegistryObject<Block> block1 = registerBlock(name, block, blockBefore, secondaryTab);
//    ItemGroupEvents.modifyEntriesEvent(thirdTab).register(entries -> entries.addAfter(blockBefore2, block1.asItem()));
      return block1;
   }


   public static RegistryObject<Block> registerTransparentBlockWithoutTab(String name, Supplier<Block> block) {
      RegistryObject<Block> block1 = registerBlockWithoutTab(name, block);
      RenderLayerHashMap.put(name, block1);
      return block1;
   }

   public static RegistryObject<Block> registerTransparentBlock(String name, Supplier<Block> block) {
      RegistryObject<Block> block1 = registerBlock(name, block);
      RenderLayerHashMap.put(name, block1);
      return block1;
   }

   public static RegistryObject<Block> registerTransparentBlock(String name, Supplier<Block> block, ItemLike itemBefore, ResourceKey<CreativeModeTab> secondaryTab) {
      RegistryObject<Block> block1 = registerBlock(name, block, itemBefore, secondaryTab);
      RenderLayerHashMap.put(name, block1);
      return block1;
   }

   public static RegistryObject<Block> registerTransparentBlock(String name, Supplier<Block> block, ItemLike itemBefore, ResourceKey<CreativeModeTab> secondaryTab, ItemLike blockBefore2, ResourceKey<CreativeModeTab> thirdTab) {
      RegistryObject<Block> block1 = registerBlock(name, block, itemBefore, secondaryTab, blockBefore2, thirdTab);
      RenderLayerHashMap.put(name, block1);
      return block1;
   }
   public static RegistryObject<Item> registerItem(String name, Supplier<Item> item) {
      RegistryObject<Item> item1 = DD_ITEMS.register(name, item);
//    if (NSConfig.creativeTab) {
//      ItemGroupEvents.modifyEntriesEvent(NSItemGroups.NS_ITEM_GROUP).register(entries -> entries.accept(item1));
//    }
      return item1;
   }

   public static RegistryObject<Item> registerItem(String name, Supplier<Item> item, ItemLike itemBefore, ResourceKey<CreativeModeTab> secondaryTab) {
//    ItemGroupEvents.modifyEntriesEvent(secondaryTab).register(entries -> entries.addAfter(itemBefore, item));
      return registerItem(name, item);
   }
}
